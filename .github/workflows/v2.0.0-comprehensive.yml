name: 11- Comprehensive All-Features Test

on:
  workflow_dispatch:
    inputs:
      include_multiplatform:
        description: 'Include multi-platform builds'
        required: false
        default: true
        type: boolean
      include_security:
        description: 'Include security features'
        required: false
        default: true
        type: boolean
  push:
    paths:
      - '.github/workflows/v2.0.0-comprehensive.yml'

jobs:
  comprehensive-all-features:
    runs-on: ubuntu-latest
    name: All Compatible Features Test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create Test Secrets
        run: |
          mkdir -p /tmp/test-secrets
          echo "comprehensive-test-api-key" > /tmp/test-secrets/api_key
          echo "comprehensive-test-db-pass" > /tmp/test-secrets/db_password
          chmod 600 /tmp/test-secrets/*
        
      - name: "ðŸš€ Comprehensive All-Features Build"
        id: comprehensive_build
        uses: dinushchathurya/build-tag-push-action@v2.0.0-rc.1
        with:
          # ==========================================
          # REQUIRED INPUTS
          # ==========================================
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: .
          file: Dockerfile
          repoOwner: ${{ secrets.DOCKER_USERNAME }}
          repository: comprehensive-test
          tag: all-features-${{ github.run_number }}
          
          # ==========================================
          # REGISTRY AND PLATFORM
          # ==========================================
          registry: docker.io
          platforms: ${{ github.event.inputs.include_multiplatform == 'true' && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          
          # ==========================================
          # BUILD CONFIGURATION
          # ==========================================
          build_args: |
            NODE_ENV=comprehensive-test
            VERSION=1.0.0-comprehensive
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            GITHUB_SHA=${{ github.sha }}
            GITHUB_REF=${{ github.ref }}
            GITHUB_REPOSITORY=${{ github.repository }}
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_WORKFLOW=${{ github.workflow }}
            GITHUB_RUN_ID=${{ github.run_id }}
            GITHUB_RUN_NUMBER=${{ github.run_number }}
            BUILD_TYPE=comprehensive
            FEATURE_FLAGS=all,enabled,comprehensive,test
            API_VERSION=v1
            DEBUG_MODE=false
            COMPREHENSIVE_TEST=true
            TIMESTAMP=$(date +%s)
          
          # ==========================================
          # CACHE CONFIGURATION
          # ==========================================
          cache_from: type=gha
          cache_to: type=gha,mode=max
          
          # ==========================================
          # COMPREHENSIVE LABELS
          # ==========================================
          labels: |
            org.opencontainers.image.title=Comprehensive Test Image
            org.opencontainers.image.description=Testing all GitHub Actions compatible features
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=1.0.0-comprehensive
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.vendor=Comprehensive Test Organization
            org.opencontainers.image.authors=GitHub Actions <actions@github.com>
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/blob/main/README.md
            maintainer=comprehensive-test@example.com
            version=1.0.0-comprehensive
            build.number=${{ github.run_number }}
            build.id=${{ github.run_id }}
            build.url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            git.commit=${{ github.sha }}
            git.branch=${{ github.ref_name }}
            git.repository=${{ github.repository }}
            github.workflow=${{ github.workflow }}
            github.actor=${{ github.actor }}
            github.event=${{ github.event_name }}
            environment=comprehensive-test
            team=platform-engineering
            project=docker-action-comprehensive-test
            cost-center=engineering
            security.scan=enabled
            test.type=comprehensive-all-features
            test.timestamp=${{ github.event.head_commit.timestamp }}
            test.run.number=${{ github.run_number }}
            feature.multiplatform=${{ github.event.inputs.include_multiplatform }}
            feature.security=${{ github.event.inputs.include_security }}
            cache.strategy=github-actions
            cache.enabled=true
            platforms.requested=${{ github.event.inputs.include_multiplatform == 'true' && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
            
          # ==========================================
          # ANNOTATIONS
          # ==========================================
          annotations: |
            org.opencontainers.image.title=Comprehensive Test Image
            org.opencontainers.image.description=All GitHub Actions compatible features tested
            custom.annotation.build-system=github-actions
            custom.annotation.test-type=comprehensive
            custom.annotation.test-run=${{ github.run_number }}
            custom.annotation.features=all-compatible
            
          # ==========================================
          # SECURITY FEATURES
          # ==========================================
          provenance: ${{ github.event.inputs.include_security == 'true' }}
          sbom: ${{ github.event.inputs.include_security == 'true' }}
          
          # ==========================================
          # SECRETS
          # ==========================================
          secrets: |
            id=api_key,src=/tmp/test-secrets/api_key
            id=db_password,src=/tmp/test-secrets/db_password
          
          # ==========================================
          # NETWORK AND RESOURCES
          # ==========================================
          network: host
          shm_size: 2g
          add_hosts: |
            host.docker.internal:host-gateway
            test.local:127.0.0.1
            api.test:10.0.0.1
            db.test:10.0.0.2
            cache.test:10.0.0.3
            monitoring.test:10.0.0.4
          allow: network.host
          
          # ==========================================
          # RESOURCE LIMITS
          # ==========================================
          ulimit: |
            nofile=1024:1024
            nproc=2048:4096
            memlock=67108864:67108864
            
          # ==========================================
          # BUILD OPTIONS
          # ==========================================
          target: production
          no_cache: false
          pull: true
          push: true
          load: false
          
          # ==========================================
          # GITHUB INTEGRATION
          # ==========================================
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: "ðŸ“Š Comprehensive Test Results"
        run: |
          echo "ðŸŽ‰ COMPREHENSIVE TEST COMPLETED SUCCESSFULLY!"
          echo "============================================="
          echo ""
          echo "## ðŸ“‹ Build Information"
          echo "**Image URL:** ${{ steps.comprehensive_build.outputs.image_url }}"
          echo "**Image ID:** ${{ steps.comprehensive_build.outputs.imageid }}"
          echo "**Image Size:** ${{ steps.comprehensive_build.outputs.image_size }} bytes"
          echo "**Build Time:** ${{ steps.comprehensive_build.outputs.build_time }} seconds"
          echo "**Image Digest:** ${{ steps.comprehensive_build.outputs.digest }}"
          echo ""
          echo "## âœ… Features Tested"
          echo "- **Basic Build:** âœ… Required inputs"
          echo "- **Registry:** âœ… Docker Hub"
          echo "- **Platforms:** âœ… ${{ github.event.inputs.include_multiplatform == 'true' && 'Multi-platform (linux/amd64,linux/arm64)' || 'Single platform (linux/amd64)' }}"
          echo "- **Build Args:** âœ… Comprehensive build arguments"
          echo "- **Cache:** âœ… GitHub Actions cache"
          echo "- **Labels:** âœ… OCI-compliant and custom labels"
          echo "- **Annotations:** âœ… Custom annotations"
          echo "- **Security:** âœ… ${{ github.event.inputs.include_security == 'true' && 'Provenance + SBOM enabled' || 'Security features disabled' }}"
          echo "- **Secrets:** âœ… Build secrets injection"
          echo "- **Network:** âœ… Host network mode"
          echo "- **Resources:** âœ… Memory, ulimits, cgroup"
          echo "- **Build Options:** âœ… Target, pull, push modes"
          echo "- **GitHub Integration:** âœ… GitHub token integration"
          echo ""
          echo "## ðŸš« Excluded Features"
          echo "- **security.insecure:** Not supported in GitHub Actions"
          echo ""
          echo "## ðŸŽ¯ Test Configuration"
          echo "- **Multi-platform:** ${{ github.event.inputs.include_multiplatform }}"
          echo