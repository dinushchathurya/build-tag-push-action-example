name: 6- Security Features Test Workflow
on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/6-v2.0.0-security.yml'

jobs:
  security-attestations:
    runs-on: ubuntu-latest
    name: Security Attestations Test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: "🔒 Build with Security Features"
        id: security_build
        uses: dinushchathurya/build-tag-push-action@v2.0.0-rc.1
        with:
          username: ${{ secrets.DOCKER_NEW_USERNAME }}
          password: ${{ secrets.DOCKER_NEW_PASSWORD }}
          context: .
          file: Dockerfile
          repoOwner: ${{ secrets.DOCKER_NEW_USERNAME }}
          repository: test-security
          tag: security-${{ github.run_number }}
          platforms: linux/amd64,linux/arm64
          
          # Security features
          provenance: true
          sbom: true
          
          # Use registry cache instead of GHA cache
          cache_from: type=registry,ref=${{ secrets.DOCKER_NEW_USERNAME }}/test-security:cache
          cache_to: type=registry,ref=${{ secrets.DOCKER_NEW_USERNAME }}/test-security:cache,mode=max

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: "🔍 Verify Provenance Attestation"
        run: |
          echo "Checking provenance attestation..."
          cosign verify-attestation \
            --type slsaprovenance \
            --certificate-identity-regexp=".*" \
            --certificate-oidc-issuer-regexp=".*" \
            ${{ secrets.DOCKER_NEW_USERNAME }}/test-security:security-${{ github.run_number }} || echo "Provenance verification failed"

      - name: "📋 Verify SBOM Attestation"
        run: |
          echo "Checking SBOM attestation..."
          cosign verify-attestation \
            --type spdxjson \
            --certificate-identity-regexp=".*" \
            --certificate-oidc-issuer-regexp=".*" \
            ${{ secrets.DOCKER_NEW_USERNAME }}/test-security:security-${{ github.run_number }} || echo "SBOM verification failed"

      - name: "📥 Download and Inspect Attestations"
        run: |
          echo "=== Downloading Provenance ==="
          cosign download attestation \
            --predicate-type slsaprovenance \
            ${{ secrets.DOCKER_NEW_USERNAME }}/test-security:security-${{ github.run_number }} \
            > provenance.json
          echo "Provenance attestation content:"
          cat provenance.json | jq '.payload | @base64d | fromjson' || echo "Failed to parse provenance"
          
          echo "=== Downloading SBOM ==="
          cosign download attestation \
            --predicate-type spdxjson \
            ${{ secrets.DOCKER_NEW_USERNAME }}/test-security:security-${{ github.run_number }} \
            > sbom.json
          echo "SBOM attestation content:"
          cat sbom.json | jq '.payload | @base64d | fromjson' || echo "Failed to parse SBOM"